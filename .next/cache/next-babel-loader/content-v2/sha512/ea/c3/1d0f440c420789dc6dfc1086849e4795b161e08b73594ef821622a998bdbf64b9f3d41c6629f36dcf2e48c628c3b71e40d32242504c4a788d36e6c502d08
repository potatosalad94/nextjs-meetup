{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/potatosalad94/code/potatosalad94/nextjs-meetup/components/NavLink/NavLink.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n\nvar NavLink = function NavLink(_ref) {\n  _s();\n\n  var href = _ref.href,\n      children = _ref.children;\n  var router = useRouter();\n  var className = children.props.className || \"\";\n\n  if (router.pathname === href) {\n    className = \"\".concat(className, \" active\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    children: /*#__PURE__*/React.cloneElement(children, {\n      className: className\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(NavLink, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = NavLink;\nexport default NavLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavLink\");","map":{"version":3,"sources":["/home/potatosalad94/code/potatosalad94/nextjs-meetup/components/NavLink/NavLink.js"],"names":["React","Link","useRouter","NavLink","href","children","router","className","props","pathname","cloneElement"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACtC,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,MAAIK,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;;AACA,MAAID,MAAM,CAACG,QAAP,KAAoBL,IAAxB,EAA8B;AAC5BG,IAAAA,SAAS,aAAMA,SAAN,YAAT;AACD;;AAED,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAA,2BAAmBJ,KAAK,CAACU,YAAN,CAAmBL,QAAnB,EAA6B;AAAEE,MAAAA,SAAS,EAATA;AAAF,KAA7B;AAAnB;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CATD;;GAAMJ,O;UACWD,S;;;KADXC,O;AAWN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\n\nconst NavLink = ({ href, children }) => {\n  const router = useRouter();\n\n  let className = children.props.className || \"\";\n  if (router.pathname === href) {\n    className = `${className} active`;\n  }\n\n  return <Link href={href}>{React.cloneElement(children, { className })}</Link>;\n};\n\nexport default NavLink;\n"]},"metadata":{},"sourceType":"module"}