{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/potatosalad94/code/potatosalad94/nextjs-meetup/components/Link/ActiveLink.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport React, { Children } from \"react\";\n\nconst ActiveLink = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  const router = useRouter();\n  const child = Children.only(children);\n  let className = child.props.className || \"\";\n  const isDynamicRoute = props.href.match(/^\\/?\\[{1,2}\\.{0,3}[a-z]+\\]{1,2}$/);\n\n  if (router.pathname === props.href && !isDynamicRoute && props.activeClassName) {\n    className = `${className} ${props.activeClassName}`.trim();\n  } else if (router.asPath === props.as && isDynamicRoute) {\n    className = `${className} ${props.activeClassName}`.trim();\n  }\n\n  delete props.activeClassName;\n  return /*#__PURE__*/_jsxDEV(Link, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/React.cloneElement(child, {\n      className\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\nexport default ActiveLink;","map":{"version":3,"sources":["/home/potatosalad94/code/potatosalad94/nextjs-meetup/components/Link/ActiveLink.js"],"names":["useRouter","Link","React","Children","ActiveLink","children","props","router","child","only","className","isDynamicRoute","href","match","pathname","activeClassName","trim","asPath","as","cloneElement"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,UAAU,GAAG,UAA4B;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AAAA,MAAZC,KAAY;;AAC7C,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,KAAK,GAAGL,QAAQ,CAACM,IAAT,CAAcJ,QAAd,CAAd;AACA,MAAIK,SAAS,GAAGF,KAAK,CAACF,KAAN,CAAYI,SAAZ,IAAyB,EAAzC;AACA,QAAMC,cAAc,GAAGL,KAAK,CAACM,IAAN,CAAWC,KAAX,CAAiB,kCAAjB,CAAvB;;AAEA,MACEN,MAAM,CAACO,QAAP,KAAoBR,KAAK,CAACM,IAA1B,IACA,CAACD,cADD,IAEAL,KAAK,CAACS,eAHR,EAIE;AACAL,IAAAA,SAAS,GAAI,GAAEA,SAAU,IAAGJ,KAAK,CAACS,eAAgB,EAAtC,CAAwCC,IAAxC,EAAZ;AACD,GAND,MAMO,IAAIT,MAAM,CAACU,MAAP,KAAkBX,KAAK,CAACY,EAAxB,IAA8BP,cAAlC,EAAkD;AACvDD,IAAAA,SAAS,GAAI,GAAEA,SAAU,IAAGJ,KAAK,CAACS,eAAgB,EAAtC,CAAwCC,IAAxC,EAAZ;AACD;;AAED,SAAOV,KAAK,CAACS,eAAb;AAEA,sBAAO,QAAC,IAAD,kCAAUT,KAAV;AAAA,2BAAkBJ,KAAK,CAACiB,YAAN,CAAmBX,KAAnB,EAA0B;AAAEE,MAAAA;AAAF,KAA1B;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnBD;;AAqBA,eAAeN,UAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport React, { Children } from \"react\";\n\nconst ActiveLink = ({ children, ...props }) => {\n  const router = useRouter();\n  const child = Children.only(children);\n  let className = child.props.className || \"\";\n  const isDynamicRoute = props.href.match(/^\\/?\\[{1,2}\\.{0,3}[a-z]+\\]{1,2}$/);\n\n  if (\n    router.pathname === props.href &&\n    !isDynamicRoute &&\n    props.activeClassName\n  ) {\n    className = `${className} ${props.activeClassName}`.trim();\n  } else if (router.asPath === props.as && isDynamicRoute) {\n    className = `${className} ${props.activeClassName}`.trim();\n  }\n\n  delete props.activeClassName;\n\n  return <Link {...props}>{React.cloneElement(child, { className })}</Link>;\n};\n\nexport default ActiveLink;\n"]},"metadata":{},"sourceType":"module"}