{"ast":null,"code":"import _defineProperty from \"/home/potatosalad94/code/potatosalad94/nextjs-meetup/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/home/potatosalad94/code/potatosalad94/nextjs-meetup/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport React, { Children } from \"react\";\n\nvar ActiveLink = function ActiveLink(_ref) {\n  var router = _ref.router,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"router\", \"children\"]);\n\n  var child = Children.only(children);\n  var className = child.props.className || \"\";\n\n  if (router.pathname === props.href && props.activeClassName) {\n    className = \"\".concat(className, \" \").concat(props.activeClassName).trim();\n  }\n\n  delete props.activeClassName;\n  return /*#__PURE__*/_jsx(Link, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/React.cloneElement(child, {\n      className: className\n    })\n  }));\n};\n\nexport default withRouter(ActiveLink);","map":null,"metadata":{},"sourceType":"module"}